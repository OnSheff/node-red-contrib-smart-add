{
    "id": "f0e76c36111fc593",
    "type": "subflow",
    "name": "OR",
    "info": "Performs the function of a logical OR.\n\n\nIf `msg.topic` = **get_value** is received, the current node value is sent.\n\nIf `msg.topic` = **get_dict** is received, the current dictvalues dictionary is sent.\n\nIf `msg.reset` = **true** is received, the values are reset.\n\n\n\n### Configuration\n\n **Inverse output**\n\nIf set to **true**, the output value will be inverted.\n\n`Default:` **false**\n\n---\n\n **Set msg.topic**\n\nYou can set msg.topic for the output flow.\n\n---\n\n **Rate in sec.**\n\nYou can limit the number of messages sent by the node.\n\n`Available range:` **0 - 3600**\n\n`Default:` **1 mes/sec**\n",
    "category": "Smart add",
    "in": [
        {
            "x": 100,
            "y": 160,
            "wires": [
                {
                    "id": "8000f51d15975831"
                }
            ]
        }
    ],
    "out": [
        {
            "x": 1000,
            "y": 160,
            "wires": [
                {
                    "id": "ade5c4b456f06909",
                    "port": 0
                }
            ]
        }
    ],
    "env": [
        {
            "name": "INVERSE",
            "type": "bool",
            "value": "false",
            "ui": {
                "label": {
                    "ru": "Inverse output"
                },
                "type": "checkbox"
            }
        },
        {
            "name": "TOPIC",
            "type": "str",
            "value": "",
            "ui": {
                "label": {
                    "ru": "Set msg.topic"
                },
                "type": "input",
                "opts": {
                    "types": [
                        "str"
                    ]
                }
            }
        },
        {
            "name": "RATE",
            "type": "num",
            "value": "1",
            "ui": {
                "icon": "font-awesome/fa-bar-chart",
                "label": {
                    "ru": "Rate in sec."
                },
                "type": "spinner",
                "opts": {
                    "min": 0,
                    "max": 3600
                }
            }
        }
    ],
    "meta": {
        "type": "Logical OR",
        "version": "1.2.2",
        "author": "Anton Shefov <a.shefov@gmail.com>",
        "desc": "Logical OR",
        "keywords": "node-red",
        "license": "MIT"
    },
    "color": "#7FC7FF",
    "icon": "font-awesome/fa-code-fork",
    "status": {
        "x": 1000,
        "y": 280,
        "wires": [
            {
                "id": "bfbad6308f9b448b",
                "port": 0
            },
            {
                "id": "a3a885dda83b371f",
                "port": 0
            }
        ]
    },
    "flow": [
        {
            "id": "d4e2d977d1e9741b",
            "type": "function",
            "z": "f0e76c36111fc593",
            "name": "OR",
            "func": "var values_dict = flow.get(\"values_dict\");\nvar or_value = flow.get(\"or_value\");\n\n\nif (msg.topic != null){\n    values_dict[String(msg.topic)] = Boolean(msg.payload);\n    or_value = false;\n    for (let key in values_dict){\n        if (values_dict[key]) { or_value = true;}\n    }\n    flow.set(\"or_value\", or_value);\n    flow.set(\"values_dict\", values_dict);\n}\n\nif (or_value != null) {\n    return { \"payload\": or_value };\n}",
            "outputs": 1,
            "timeout": "",
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 450,
            "y": 200,
            "wires": [
                [
                    "1443680d28fd9b62"
                ]
            ]
        },
        {
            "id": "1443680d28fd9b62",
            "type": "switch",
            "z": "f0e76c36111fc593",
            "name": "INVERSE?",
            "property": "INVERSE",
            "propertyType": "env",
            "rules": [
                {
                    "t": "true"
                },
                {
                    "t": "false"
                }
            ],
            "checkall": "false",
            "repair": false,
            "outputs": 2,
            "x": 595,
            "y": 200,
            "wires": [
                [
                    "821698c641957bfd"
                ],
                [
                    "c47cb5c0090236ff"
                ]
            ],
            "l": false
        },
        {
            "id": "c47cb5c0090236ff",
            "type": "switch",
            "z": "f0e76c36111fc593",
            "name": "",
            "property": "TOPIC",
            "propertyType": "env",
            "rules": [
                {
                    "t": "nnull"
                },
                {
                    "t": "else"
                }
            ],
            "checkall": "false",
            "repair": false,
            "outputs": 2,
            "x": 755,
            "y": 160,
            "wires": [
                [
                    "e2098b594f23a742"
                ],
                [
                    "ade5c4b456f06909"
                ]
            ],
            "l": false
        },
        {
            "id": "e2098b594f23a742",
            "type": "change",
            "z": "f0e76c36111fc593",
            "name": "",
            "rules": [
                {
                    "t": "set",
                    "p": "topic",
                    "pt": "msg",
                    "to": "TOPIC",
                    "tot": "env"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 835,
            "y": 120,
            "wires": [
                [
                    "ade5c4b456f06909"
                ]
            ],
            "l": false
        },
        {
            "id": "6f5ec43f77d1a8c8",
            "type": "delay",
            "z": "f0e76c36111fc593",
            "name": "",
            "pauseType": "rate",
            "timeout": "5",
            "timeoutUnits": "seconds",
            "rate": "10",
            "nbRateUnits": "5",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": true,
            "allowrate": true,
            "outputs": 1,
            "x": 495,
            "y": 140,
            "wires": [
                [
                    "1443680d28fd9b62"
                ]
            ],
            "l": false
        },
        {
            "id": "a8e3fa3858e87386",
            "type": "switch",
            "z": "f0e76c36111fc593",
            "name": "",
            "property": "topic",
            "propertyType": "msg",
            "rules": [
                {
                    "t": "eq",
                    "v": "get_dict",
                    "vt": "str"
                },
                {
                    "t": "eq",
                    "v": "get_value",
                    "vt": "str"
                },
                {
                    "t": "else"
                }
            ],
            "checkall": "false",
            "repair": false,
            "outputs": 3,
            "x": 295,
            "y": 160,
            "wires": [
                [
                    "8bef47a0ce52ab82"
                ],
                [
                    "4a54428e593cab98"
                ],
                [
                    "d4e2d977d1e9741b"
                ]
            ],
            "l": false
        },
        {
            "id": "821698c641957bfd",
            "type": "change",
            "z": "f0e76c36111fc593",
            "name": "NOT",
            "rules": [
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "$not(msg.payload)\t",
                    "tot": "jsonata"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 675,
            "y": 160,
            "wires": [
                [
                    "c47cb5c0090236ff"
                ]
            ],
            "l": false
        },
        {
            "id": "4a54428e593cab98",
            "type": "change",
            "z": "f0e76c36111fc593",
            "name": "",
            "rules": [
                {
                    "t": "set",
                    "p": "rate",
                    "pt": "msg",
                    "to": "$number($env('RATE')) * 1000\t",
                    "tot": "jsonata",
                    "dc": true
                },
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "or_value",
                    "tot": "flow",
                    "dc": true
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 415,
            "y": 140,
            "wires": [
                [
                    "6f5ec43f77d1a8c8"
                ]
            ],
            "l": false
        },
        {
            "id": "bfbad6308f9b448b",
            "type": "template",
            "z": "f0e76c36111fc593",
            "name": "",
            "field": "payload",
            "fieldType": "msg",
            "format": "json",
            "syntax": "mustache",
            "template": "{\n    \"fill\": \"grey\",\n    \"shape\": \"ring\",\n    \"text\": \"no values\"\n}",
            "output": "json",
            "x": 800,
            "y": 320,
            "wires": [
                []
            ]
        },
        {
            "id": "eaf9daf1849d0a16",
            "type": "inject",
            "z": "f0e76c36111fc593",
            "name": "",
            "props": [
                {
                    "p": "payload"
                }
            ],
            "repeat": "",
            "crontab": "",
            "once": true,
            "onceDelay": 0.1,
            "topic": "",
            "payload": "true",
            "payloadType": "bool",
            "x": 270,
            "y": 320,
            "wires": [
                [
                    "da5941d7d76d5196"
                ]
            ]
        },
        {
            "id": "da5941d7d76d5196",
            "type": "function",
            "z": "f0e76c36111fc593",
            "name": "Reset",
            "func": "if (msg.topic != null){\n    var values_dict = flow.get(\"values_dict\");\n    var or_value = false;\n    try {\n        delete values_dict[msg.topic];\n        flow.set(\"values_dict\",values_dict);\n    } catch {}\n    if (Object.keys(values_dict).length != 0){\n        for (let key in values_dict){\n            if (values_dict[key]) { or_value = true;}\n        }\n        flow.set(\"or_value\", or_value);\n        return [{ \"payload\": or_value }, null];\n    } else {\n        flow.set(\"or_value\", null);\n        return [null, { \"payload\": true }];\n    }\n} else {\n    flow.set(\"values_dict\", {});\n    flow.set(\"or_value\", null);\n    return [null, { \"payload\": true }];\n}",
            "outputs": 2,
            "timeout": 0,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 450,
            "y": 260,
            "wires": [
                [
                    "1443680d28fd9b62"
                ],
                [
                    "c661be97c8589b34"
                ]
            ]
        },
        {
            "id": "8000f51d15975831",
            "type": "switch",
            "z": "f0e76c36111fc593",
            "name": "",
            "property": "reset",
            "propertyType": "msg",
            "rules": [
                {
                    "t": "nnull"
                },
                {
                    "t": "else"
                }
            ],
            "checkall": "false",
            "repair": false,
            "outputs": 2,
            "x": 195,
            "y": 160,
            "wires": [
                [
                    "b06473f0b04a13d9"
                ],
                [
                    "a8e3fa3858e87386"
                ]
            ],
            "l": false
        },
        {
            "id": "8bef47a0ce52ab82",
            "type": "change",
            "z": "f0e76c36111fc593",
            "name": "",
            "rules": [
                {
                    "t": "set",
                    "p": "rate",
                    "pt": "msg",
                    "to": "$number($env('RATE')) * 1000\t",
                    "tot": "jsonata",
                    "dc": true
                },
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "values_dict",
                    "tot": "flow",
                    "dc": true
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 415,
            "y": 80,
            "wires": [
                [
                    "0612d9088e372761"
                ]
            ],
            "l": false
        },
        {
            "id": "0612d9088e372761",
            "type": "delay",
            "z": "f0e76c36111fc593",
            "name": "",
            "pauseType": "rate",
            "timeout": "5",
            "timeoutUnits": "seconds",
            "rate": "10",
            "nbRateUnits": "5",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": true,
            "allowrate": true,
            "outputs": 1,
            "x": 495,
            "y": 80,
            "wires": [
                [
                    "c47cb5c0090236ff"
                ]
            ],
            "l": false
        },
        {
            "id": "c661be97c8589b34",
            "type": "delay",
            "z": "f0e76c36111fc593",
            "name": "",
            "pauseType": "delay",
            "timeout": "100",
            "timeoutUnits": "milliseconds",
            "rate": "1",
            "nbRateUnits": "1",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": false,
            "allowrate": false,
            "outputs": 1,
            "x": 595,
            "y": 320,
            "wires": [
                [
                    "bfbad6308f9b448b"
                ]
            ],
            "l": false
        },
        {
            "id": "b06473f0b04a13d9",
            "type": "link out",
            "z": "f0e76c36111fc593",
            "name": "link out 8",
            "mode": "link",
            "links": [
                "91d6571f70dd7307"
            ],
            "x": 295,
            "y": 100,
            "wires": []
        },
        {
            "id": "91d6571f70dd7307",
            "type": "link in",
            "z": "f0e76c36111fc593",
            "name": "link in 5",
            "links": [
                "b06473f0b04a13d9"
            ],
            "x": 305,
            "y": 260,
            "wires": [
                [
                    "da5941d7d76d5196"
                ]
            ]
        },
        {
            "id": "a3a885dda83b371f",
            "type": "function",
            "z": "f0e76c36111fc593",
            "name": "counter",
            "func": "var text = Object.keys(flow.get('values_dict')).length + ': ' + msg.payload;\n\n\nreturn {\n    \"payload\" : {\n        \"fill\": \"blue\",\n        \"shape\": \"dot\",\n        \"text\": text\n    }\n};",
            "outputs": 1,
            "timeout": 0,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 800,
            "y": 240,
            "wires": [
                []
            ]
        },
        {
            "id": "ade5c4b456f06909",
            "type": "junction",
            "z": "f0e76c36111fc593",
            "x": 900,
            "y": 160,
            "wires": [
                [
                    "a3a885dda83b371f"
                ]
            ]
        }
    ]
}