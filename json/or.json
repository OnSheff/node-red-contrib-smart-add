
    {
        "id": "f0e76c36111fc593",
        "type": "subflow",
        "name": "OR",
        "info": "Logical OR",
        "category": "Smart add",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "a8e3fa3858e87386"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 100,
                "wires": [
                    {
                        "id": "ade5c4b456f06909",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "INVERSE",
                "type": "bool",
                "value": "false",
                "ui": {
                    "label": {
                        "ru": "Inverse output"
                    },
                    "type": "checkbox"
                }
            },
            {
                "name": "TOPIC",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "ru": "Set msg.topic"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "RATE",
                "type": "num",
                "value": "1",
                "ui": {
                    "icon": "font-awesome/fa-bar-chart",
                    "label": {
                        "ru": "Rate in sec."
                    },
                    "type": "spinner",
                    "opts": {
                        "min": 0,
                        "max": 3600
                    }
                }
            }
        ],
        "meta": {
			"type": "Logical OR",
            "version": "1.0.2",
			"author": "Anton Shefov <a.shefov@gmail.com>",
            "desc": "Logical OR",
			"keywords": "node-red",
            "license": "MIT"
        },
        "color": "#7FC7FF",
        "icon": "font-awesome/fa-code-fork",
        "status": {
            "x": 940,
            "y": 180,
            "wires": [
                {
                    "id": "ade5c4b456f06909",
                    "port": 0
                },
                {
                    "id": "bfbad6308f9b448b",
                    "port": 0
                }
            ]
        },
		"flow" : [
		{
        "id": "d4e2d977d1e9741b",
        "type": "function",
        "z": "f0e76c36111fc593",
        "name": "OR",
        "func": "var values_dict = context.get(\"values_dict\");\nvar or_value = context.get(\"or_value\");\n\nif (msg.reset === true){\n    context.set(\"values_dict\", {});\n    context.set(\"or_value\", null);\n    return [null, {\"payload\": true }];\n}\n\nif (msg.topic !== null && msg.topic !== \"get_value\"){\n    values_dict[msg.topic] = msg.payload;\n    or_value = false;\n    for (let key in values_dict){\n        if (values_dict[key]) { or_value = true;}\n    }\n    context.set(\"or_value\", or_value);\n}\n\nif (or_value !== null) {\n    return [{ \"payload\": or_value }, null];\n} else {\n    return [null, {\"payload\": true }];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Добавленный здесь код будет исполняться\n// однократно при развертывании узла.\ncontext.set(\"values_dict\", {});\ncontext.set(\"or_value\", null);",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "1443680d28fd9b62"
            ],
            [
                "bfbad6308f9b448b"
            ]
        ]
    },
    {
        "id": "1443680d28fd9b62",
        "type": "switch",
        "z": "f0e76c36111fc593",
        "name": "INVERSE?",
        "property": "INVERSE",
        "propertyType": "env",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 535,
        "y": 140,
        "wires": [
            [
                "821698c641957bfd"
            ],
            [
                "c47cb5c0090236ff"
            ]
        ],
        "l": false
    },
    {
        "id": "c47cb5c0090236ff",
        "type": "switch",
        "z": "f0e76c36111fc593",
        "name": "",
        "property": "TOPIC",
        "propertyType": "env",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 695,
        "y": 140,
        "wires": [
            [
                "e2098b594f23a742"
            ],
            [
                "ade5c4b456f06909"
            ]
        ],
        "l": false
    },
    {
        "id": "e2098b594f23a742",
        "type": "change",
        "z": "f0e76c36111fc593",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "TOPIC",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 775,
        "y": 100,
        "wires": [
            [
                "ade5c4b456f06909"
            ]
        ],
        "l": false
    },
    {
        "id": "6f5ec43f77d1a8c8",
        "type": "delay",
        "z": "f0e76c36111fc593",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 295,
        "y": 100,
        "wires": [
            [
                "d4e2d977d1e9741b"
            ]
        ],
        "l": false
    },
    {
        "id": "a8e3fa3858e87386",
        "type": "switch",
        "z": "f0e76c36111fc593",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get_value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 165,
        "y": 140,
        "wires": [
            [
                "4a54428e593cab98"
            ],
            [
                "d4e2d977d1e9741b"
            ]
        ],
        "l": false
    },
    {
        "id": "821698c641957bfd",
        "type": "change",
        "z": "f0e76c36111fc593",
        "name": "NOT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$not(msg.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 615,
        "y": 100,
        "wires": [
            [
                "c47cb5c0090236ff"
            ]
        ],
        "l": false
    },
    {
        "id": "4a54428e593cab98",
        "type": "change",
        "z": "f0e76c36111fc593",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "$number($env('RATE')) * 1000\t",
                "tot": "jsonata",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 235,
        "y": 100,
        "wires": [
            [
                "6f5ec43f77d1a8c8"
            ]
        ],
        "l": false
    },
    {
        "id": "bfbad6308f9b448b",
        "type": "template",
        "z": "f0e76c36111fc593",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"fill\": \"grey\",\n    \"shape\": \"ring\",\n    \"text\": \"no values\"\n}",
        "output": "json",
        "x": 580,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "eaf9daf1849d0a16",
        "type": "inject",
        "z": "f0e76c36111fc593",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "bfbad6308f9b448b"
            ]
        ]
    },
    {
        "id": "ade5c4b456f06909",
        "type": "junction",
        "z": "f0e76c36111fc593",
        "x": 840,
        "y": 140,
        "wires": [
            []
        ]
    }
		]
    }